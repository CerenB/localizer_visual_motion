function [ logFile ] = saveOutput(subjectName, logFile, ExpParameters, input, varargin)

if nargin > 5
    iBlock = varargin{1};
    iEventsPerBlock = varargin{2};
end

switch input
    
    case 'open'
        
        if ~exist('logfiles','dir')
            mkdir('logfiles')
        end
        
        % Initialize txt logfiles
        % % % ADD SESSION AND RUN NUMBER
        logFile.EventTxtLogFile = fopen(fullfile('logfiles',[subjectName,'_Events.txt']),'w');
        fprintf(logFile.EventTxtLogFile,'%12s %12s %12s %18s %12s %12s %12s %12s \n', ...
            'BlockNumber', ...
            'EventNumber', ...
            'Direction', ...
            'IsFixationTarget', ...
            'Speed', ...
            'Onset', ...
            'End', ...
            'Duration');
        
        logFile.BlockTxtLogFile = fopen(fullfile('logfiles',[subjectName,'_Blocks.txt']),'w');
        fprintf(logFile.BlockTxtLogFile,'%12s  %12s %12s %12s %12s \n', ...
            'BlockNumber', ...
            'Condition', ...
            'Onset', ...
            'End', ...
            'Duration');
        
        if ExpParameters.Task1
            logFile.ResponsesTxtLogFile = fopen(fullfile('logfiles',[subjectName,'_Responses.txt']),'w');
            fprintf(logFile.ResponsesTxtLogFile,'%12s \n', ...
                'Responses');
        end
        
    case 'save Events'
        
        % Event txt_Logfile
        fprintf(logFile.EventTxtLogFile,'%12.0f %12.0f %12.0f %18.0f %12.2f %12.5f %12.5f %12.5f \n',...
            iBlock, ...
            iEventsPerBlock, ...
            logFile.iEventDirection, ...
            logFile.iEventIsFixationTarget, ...
            logFile.iEventSpeed, ...
            logFile.eventOnsets(iBlock, iEventsPerBlock), ...
            logFile.eventEnds(iBlock, iEventsPerBlock), ...
            logFile.eventDurations(iBlock, iEventsPerBlock));
        
    case 'save Blocks'
        
        % Block txt_Logfile
        fprintf(logFile.BlockTxtLogFile,'%12.0f %12s %12f %12f %12f  \n',...
            iBlock, ...
            ExpParameters.designBlockNames{iBlock,1}, ...
            logFile.blockOnsets(iBlock,1), ...
            logFile.blockEnds(iBlock,1), ...
            logFile.blockDurations(iBlock,1));
        
    case 'save Responses'
        
    case 'close'
        
        % close txt log files
        fclose(logFile.BlockTxtLogFile);
        fclose(logFile.EventTxtLogFile);
        fclose(logFile.ResponsesTxtLogFile);
        
end